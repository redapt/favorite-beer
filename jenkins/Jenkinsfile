pipeline {
    agent {
        kubernetes {
            label 'kaniko'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  name: kaniko
spec:
  serviceAccountName: jenkins-sa-agent
  containers:
  - name: jnlp
    image: 'docker.io/jenkins/inbound-agent:4.3-4-alpine'
    args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
  - name: kaniko
    image: 771502366784.dkr.ecr.us-east-2.amazonaws.com/kaniko:latest
    imagePullPolicy: Always
    command:
    - /busybox/cat
    tty: true
  - name: tools
    image: argoproj/argo-cd-ci-builder:v1.0.0
    command:
    - cat
    tty: true
  restartPolicy: Never
"""
        }
    }
    stages {
        stage('Make Image') {
            environment {
                DOCKERFILE      = "Dockerfile"
                GITREPO         = "github.com/redapt/favorite-beer.git"
                GIT_REPO_BRANCH = "master"
                CONTEXT         = "./spa-react-netcore-redis/voting"
                REGISTRY        = '771502366784.dkr.ecr.us-east-2.amazonaws.com'
                IMAGE           = 'favorite-beer'
                LATEST_TAG      = 'latest'
            }
            steps {
                container('tools'){
                    sh "git clone https://${env.GITREPO}"
                    sh "wget https://github.com/mikefarah/yq/releases/download/v4.9.6/yq_linux_amd64.tar.gz"
                    sh "tar xvf yq_linux_amd64.tar.gz"
                    sh "mv yq_linux_amd64 /usr/bin/yq"
                    dir("favorite-beer") {
                        sh "git checkout ${env.GIT_REPO_BRANCH}"
                        sh "git rev-parse --short=10 HEAD > SHA_TAG"
                        sh "./jenkins/scripts/bump_version.sh"
                    }
                }
                container(name: 'kaniko', shell: '/busybox/sh') {

                    dir("favorite-beer") {
                        sh '''#!/busybox/sh
                        TAG=$(cat SHA_TAG)
                        VERSION=$(cat VERSION)

                        /kaniko/executor \
                        --context=dir://${CONTEXT} \
                        --dockerfile=${DOCKERFILE} \
                        --destination=${REGISTRY}/${IMAGE}:${TAG} \
                        --destination=${REGISTRY}/${IMAGE}:${VERSION} \
                        --destination=${REGISTRY}/${IMAGE}:${LATEST_TAG}
                        '''
                    }
                }
            }
        }
    }
}